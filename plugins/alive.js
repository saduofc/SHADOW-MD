const { cmd } = require('../command');
const os = require("os");
const { runtime } = require('../lib/functions');

cmd({
    pattern: "alive",
    alias: ["status", "runtime", "uptime"],
    react: "üìü",
    desc: "Check uptime and system status",
    category: "main",
    filename: __filename
}, async (conn, mek, m, { from, reply }) => {
    try {
        // üîπ Random Voice (PTT) URLs
        const voiceLinks = [
            "https://github.com/mrdinesh595/Mssadu/raw/refs/heads/main/database/alive.mp3",
            "https://github.com/mrdinesh595/Mssadu/raw/refs/heads/main/database/sadualive2.mp3"
        ];
        
        // üîπ Select a Random Voice Clip
        const voiceUrl = voiceLinks[Math.floor(Math.random() * voiceLinks.length)];

        // üìù Status Message
        const status = `‚ï≠‚îÅ‚îÅ„Äî *QUEEN-SADU-MD* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ *‚è≥ Uptime:*  ${runtime(process.uptime())} 
‚îÉ‚óà‚îÉ‚Ä¢ *üìü RAM Usage:* ${(process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2)}MB / ${(os.totalmem() / 1024 / 1024).toFixed(2)}MB
‚îÉ‚óà‚îÉ‚Ä¢ *‚öôÔ∏è HostName:* ${os.hostname()}
‚îÉ‚óà‚îÉ‚Ä¢ *üë®‚Äçüíª Owner:* ·¥ç Ä ·¥Ö…™…¥·¥áÍú± ú
‚îÉ‚óà‚îÉ‚Ä¢ *üß¨ Version:* V2 BETA
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑

  ùêêùêÆùêûùêûùêß ùêíùêöùêùùêÆ ùê¢ùê¨ ùêÄùê•ùê¢ùêØùêû ùêçùê®ùê∞! üéØ  

  üìå *Follow our Channel:*  
  https://whatsapp.com/channel/0029Vb0Anqe9RZAcEYc2fT2c

> *¬© Powered by Mr Dinesh*`;

        // üîπ 1. Send Random Voice Message (PTT)
        const voiceMessage = await conn.sendMessage(from, {
            audio: { url: voiceUrl },
            mimetype: 'audio/mpeg',
            ptt: true, // Send as voice message (PTT)
            contextInfo: {
                forwardingScore: 999,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    newsletterJid: '120363357105376275@g.us@newsletter',
                    newsletterName: '·¥ç Ä ·¥Ö…™…¥·¥áÍú± ú',
                    serverMessageId: 143
                }
            }
        }, { quoted: mek });

        // ‚è≥ Wait 2 seconds before sending GIF Video
        await new Promise(resolve => setTimeout(resolve, 2000));

        // üîπ 2. Send GIF Video with Status Caption
        await conn.sendMessage(from, {
            video: { url: `https://files.catbox.moe/zw2cr1.mp4` }, // GIF URL
            caption: status,
            mimetype: "video/mp4",
            gifPlayback: true, // Enable GIF Play Mode
            contextInfo: {
                mentionedJid: [m.sender],
                forwardingScore: 999,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    newsletterJid: '120363357105376275@g.us@newsletter',
                    newsletterName: '·¥ç Ä ·¥Ö…™…¥·¥áÍú± ú',
                    serverMessageId: 143
                }
            }
        }, { quoted: voiceMessage });

    } catch (e) {
        console.error("Error in alive command:", e);
        reply(`‚ùå Error: ${e.message}`);
    }
});
